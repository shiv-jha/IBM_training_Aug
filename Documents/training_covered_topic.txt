1. Installation of java - Done  
2. Set Path variable - Done
3. Install Eclipse - Done
4. Open eclipse - Done
5. Create java project - Done
6. Add package and class into it - Done
7. Run the class and confirm its printing
8. Some theory on java
9. what is class & object
10.data type & varibales
11.calling methods via object
12. control statement
13. if , if-else , switch
14.looping-for ,while,do while , for each
15.arrays
16. string and its manipulation
17. array limitations
18. Arraylist
19. Scanner
20.Hashset
21.Hashmap
22.Exception handling - try , catch, throw, throws , finally
23. Access modifiers- private,public,protected,default 
24.inheritence
23. mysql downloaded and installed
24.ddl,dml
25. create,insert,alter,select,order by, group by , join
26. java + mysql setup and program on select query
27. inner join,left join , right join , full join using union
28. performing join query from java 
29. adding constrant into table using sql
30.create ,update,insert,retrive using java+mysql
31. junit -why,what ,how
32. junit first program , asserts,hooks(before,beforeclass,after,afterclass)
33. junit test suite
34. junit test runner- counts, failure tracking
35. python introduction
36. python download,installation and path setup
37. pycharm download and installation
38. some basic python program with idle
39.launched and created hellowworld program in pycharm
40. Automatic data type
41. List - all related method for fetching ,sorting , if and looping with list
42. Some exercise with list
43. tuple and related method , tuple-list conversion
44. some ercixe with list and tuple
45.set and related program
46. Dictionary and related program
47. Functions
48. Module
49. Lambda simple use case
50. lambda with if else
51. regex
52. constructor
53. scope
54. class object
55. exception handling
56. file handling and one hands on
57. why ,what and how - automation,selenium,selenium with java
58. what ,where and test data for automation
59. importance of unique identification
60. Completed setup for selenium
61. Able to launch chrome and close it
62. Able to find element
63. Detailed overview on object identification
64. Discussed seven golden rule for xpath and did hands on - 
65. wrote automation for :- text,select,button,checkbox,radio,alert,ouse hover,link, webtable
21st
66. cucmber -why ,what and How
67. handson with all basic features
68. Tag , runner,stepdefintions,parameterisation

24th
69. Why API?
70.download & install soap UI
71. wsdl
72. handson with soap UI

25th
73. rest api & http
74. rest api with soap ui
75.get/post  with diff types of assertions
76. basic auth based

26th
77. Restassured setup with json parser
78. Program to call rest api(get) via restassured
79. fetch headers and body os response of restapi

27th
80. Rest assured and json parsing with complex logic
81. Basic authentication with rest assured
82. chaining the restassured request

28th
83. Restassured post api
84. why appium and why browserstack
85. created account in browserstack and verified details
86. Set up of eclipse project for appium
87. installed appium server and appium inspector

1st Aug
88. Appium code to run app and launch in browser stack
89. Appium inspector- Added all capabilities
90. Tap by cordinate , inspect element by source, search element with locator
91. performed tap with selected element to verify it works
92. Performed get text and click action with appium automation

2nd Aug
93. Performed findelements to get count of section and performed looping on it
94. Created efficient xpath using appium inspector
95. Launched new app wikipedia
96. Entered some text in search box of wikipedia after click action

3rd Aug
96. Click 
97. Clear text
98. verification using junit/testng
99. Setup of monbile automation in junit/testng framework

4th Aug
100. IOS app setup in browserstack and appium inspector
101. Object identification of ios in inspector
102. performed click,settext, veify text
103. converted code into framework-utilities

7th Aug
Git introductio-why , what and how?
Git client installation
Git server setup and repo creation


Command:
git clone
Git branch
Git status
git add
git commit
git push
git global config
git log
git checkout
git merge

Same branch
cloned server->local
pushed local addition to server
pushed local updates to server

cross branch
Pushed cross branch to server
Merged cross branch in local

8th Aug
git pull 
always pull before you push
same file chamges in server and local
 address git conflict and than merge
 
Added contributors to repo
contributors added own file via push and received other members file via pull

server one branch -> other branch via pull request




local changes to server:
git add , git commit , git push

server changes to local:
git pull

changes in local and server both but in diff files:
git add , git commit , git pull , git push

changes in local and server both in same files:
git add, git commit , git pull - it show the error
update local files and save what you needed
git add , git commit , git pull and git push

local changes from one branch to other brnaches
git merge

serve change one branch to other branch
Pull request


9th Aug

major problem to solve:

Addressing same file altered by multiple team members
  Added changes to specific branch
  Resolved conflict while creating Pull request
  merged to base branch with approval in place
  
  
Code review approval process
	approve
	reject-request changes
	comment

protect the branch
 By adding number of approver
 By locking the branch

10 Aug
Jenkins
Why Jenkins?
Automation run scheduling
Continuos deployment
CI/CD - jenkins

One line-> Source control push -> Jenkins will build -> create Artifact -> will upload artifact (docker)/cloud -> Will trigger automation run-
passed test-> deployment -> mail triggers
failed test -> deployment stops -> mail triggers to team

jenkins download & install with required plugin
jenkins-build environemnt,build trigger, source ,build step, post build action
created job to run simple helloWorld java program



11th Aug
mvn setup in local
git hub access token
git hub integration with jenkins for private and public repo
mvn test from command prompt
global tool config for git and mvn
integration of jenkins selenium junit git hub 
jenkins build step as mvn target
build trigger and post build action with other project
git hub upload your localm project to repo from scratch

14th Aug
Jenkins triggers
Build peridically -all ottions and hands on with per minute
conducted exam
discussed all the questions and probable answers
Why Jira?

QC -> ALM 
Jira - Rally
Selenium framework:
Keyword driven -
Data Driven- 
Hybrid
POM model


Last day plan: 16th Aug
jira handson
selenium -Windowhandles  - 
selenium -nested frames - 
Recap of all
Sharing of any resources
End note



java,junit,sql,sql with java , soap ,rest ,soap UI, rest assured ,python , selenium ,cucmber,  appium 
browserstack, git ,jenkins , jira






